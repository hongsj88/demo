package com.example.demo;import lombok.RequiredArgsConstructor;import org.springframework.batch.core.Job;import org.springframework.batch.core.Step;import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;import org.springframework.batch.core.launch.support.RunIdIncrementer;import org.springframework.batch.item.*;import org.springframework.batch.item.adapter.ItemWriterAdapter;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import javax.persistence.EntityManagerFactory;import javax.sql.DataSource;@Configuration@RequiredArgsConstructorpublic class ItemStreamConfiguration {    private final JobBuilderFactory jobBuilderFactory;    private final StepBuilderFactory stepBuilderFactory;    private final EntityManagerFactory entityManagerFactory;    private final DataSource dataSource;    @Bean    public Job batchJob() throws Exception {        return jobBuilderFactory.get("batchJob")                .incrementer(new RunIdIncrementer())                .start(step1())                .build();    }    @Bean    public Step step1() throws Exception {        return stepBuilderFactory.get("step1")                .<String, String>chunk(10)                .reader(new ItemReader<String>() {                    int i = 0;                    @Override                    public String read() throws Exception, UnexpectedInputException, ParseException, NonTransientResourceException {                        i++;                        return i > 10 ? null : "item" + i;                    }                })                .writer(customItemWriter())                .build();    }    @Bean    public ItemWriter<? super String> customItemWriter() {        ItemWriterAdapter<String> writer = new ItemWriterAdapter<>();        writer.setTargetObject(customService());        writer.setTargetMethod("customWrite");        return writer;    }    @Bean    public CustomService customService() {        return new CustomService();    }//    @Bean//    public ItemProcessor<? super Customer,? extends Customer2> customItemProcessor() {////        return new CustomItemProcessor();//    }////    @Bean//    public JdbcPagingItemReader<Customer> customItemReader() {//        JdbcPagingItemReader<Customer> reader = new JdbcPagingItemReader<>();////        reader.setDataSource(this.dataSource);//        reader.setFetchSize(5);//        reader.setPageSize(5);//        reader.setSaveState(true);//        reader.setRowMapper(new CustomerRowMapper());////        HashMap<String, Object> parameters = new HashMap<>();//        parameters.put("firstname", "C%");//        reader.setParameterValues(parameters);////        MySqlPagingQueryProvider queryProvider = new MySqlPagingQueryProvider();//        queryProvider.setSelectClause("id, firstname, lastname, birthdate");//        queryProvider.setFromClause("from customer");//        queryProvider.setWhereClause("where firstname like :firstname");//        Map<String, Order> sortKeys = new HashMap<>(1);//        sortKeys.put("id", Order.ASCENDING);//        queryProvider.setSortKeys(sortKeys);//        reader.setQueryProvider(queryProvider);////        return reader;//    }////    @Bean//    public ItemWriter<? super Customer2> customWriter() {////        return new JpaItemWriterBuilder<Customer2>()//                .usePersist(true)//                .entityManagerFactory(entityManagerFactory)//                .build();//    }}